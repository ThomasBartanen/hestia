
import { Button, TabWidget } from "std-widgets.slint";
import { PropertyMenu, PropertyInput } from "properties.slint";
import { StatementMenu, StatementInput } from "statements.slint";
import { ExpenseMenu, ExpenseInput } from "expenses.slint";
import { LesseeMenu } from "leaseholders.slint";
export component NavigationPane inherits Rectangle {
    pure callback new-expense <=> expense-menu.new-expense;
    pure callback new-property <=> prop-menu.new-property;

    in-out property <[ExpenseInput]> expenses <=> expense-menu.expenses;
    in-out property <[PropertyInput]> properties <=> prop-menu.properties;
    in-out property <[StatementInput]> statements <=> statement-menu.statements;
    in-out property <int> potential-expense-id <=> expense-menu.potential-expense-id;
    in-out property <int> potential-prop-id <=> prop-menu.potential-prop-id;
    in-out property <int> potential-lessee-id <=> lessee-menu.potential-lessee-id;
    
    Rectangle {
        TabWidget {
            Tab {
                title: "Home";
            }
            Tab {
                title: "Leaseholders";
                lessee-menu := LesseeMenu {}
            }
            Tab {
                title: "Properties";
                prop-menu := PropertyMenu { }
            }
            Tab {
                title: "Expenses";
                expense-menu := ExpenseMenu { }
            }
            Tab {
                title: "Statements";
                statement-menu := StatementMenu { }
            }
            Tab {
                title: "About";
            }
        }
    }
}

export component App inherits Window { 
    // === Window ===
    title: "Hestia";
    always-on-top: true;
    //no-frame: true;

    // === Sizing ===
    min-width: 400px;
    preferred-width: 800px;
    min-height: 300px;
    preferred-height: 600px;

    // === Elements ===
    padding: 10px;

    // === Colors ===
    background: white;

    // === Callbacks ===
    pure callback new-expense <=> nav-pane.new-expense; 
    pure callback new-property <=> nav-pane.new-property;

    // === Properties ===
    in-out property <[ExpenseInput]> expenses <=> nav-pane.expenses;
    in-out property <[PropertyInput]> properties <=> nav-pane.properties;
    in-out property <[StatementInput]> statements <=> nav-pane.statements;
    in-out property <int> potential-expense-id <=> nav-pane.potential-expense-id;
    in-out property <int> potential-prop-id <=> nav-pane.potential-prop-id;
    in-out property <int> potential-lessee-id <=> nav-pane.potential-lessee-id;
    
    nav-pane := NavigationPane { }
}
